{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MK\\\\Pictures\\\\YouTube Videos\\\\devmtn\\\\chameleon\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport chameleon_icon from \"./images/chameleon.svg\";\nimport styles from './component-styles/App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawToCanvas = e => {\n      var image = new Image();\n      image.src = e.target.value;\n      console.log(e.target.value);\n    };\n\n    this.state = {\n      canvas: null\n    };\n  }\n\n  componentDidMount() {\n    //on mounting of component, create a variable = to DOM's canvas element\n    var canvas = document.getElementById('canvas').getContext('2d'); //update state\n\n    this.setState({\n      canvas\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: chameleon_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"canvas_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      onChange: e => this.drawToCanvas(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MK/Pictures/YouTube Videos/devmtn/chameleon/src/App.js"],"names":["React","Component","styles","App","constructor","props","drawToCanvas","e","image","Image","src","target","value","console","log","state","canvas","componentDidMount","document","getElementById","getContext","setState","render","chameleon_icon"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAevBC,YAfuB,GAePC,CAAD,IAAO;AAClB,UAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,GAAN,GAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACI,MAAF,CAASC,KAArB;AACH,KApBsB;;AAGf,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAELC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAID,MAAM,GAAGE,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,UAAlC,CAA6C,IAA7C,CAAb,CAFgB,CAGhB;;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA;AAAD,KAAd;AACH;;AAUDM,EAAAA,MAAM,GAAG;AACN,WACK;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,GAAG,EAAEC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CAHJ,EAII;AAAO,MAAA,QAAQ,EAAEhB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADL;AASC;;AAlCwB;;AAqC5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport chameleon_icon from './images/chameleon.svg'\r\nimport styles from './component-styles/App.scss'\r\n\r\nclass App extends Component { \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            canvas: null\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    //on mounting of component, create a variable = to DOM's canvas element\r\n    var canvas = document.getElementById('canvas').getContext('2d');\r\n    //update state\r\n    this.setState({canvas})  \r\n}\r\n\r\ndrawToCanvas = (e) => {\r\n    var image = new Image()\r\n    image.src = e.target.value;\r\n\r\n    console.log(e.target.value)\r\n}\r\n\r\n\r\nrender() {\r\n   return(\r\n        <div id=\"app_wrap\">\r\n\r\n            <img src={chameleon_icon}/>\r\n            <div id=\"canvas_wrap\"><canvas id=\"canvas\"></canvas></div>\r\n            <input onChange={e => this.drawToCanvas(e)}></input>\r\n            \r\n        </div>\r\n      )\r\n   } \r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}